{"version":3,"sources":["layouts/default.tsx","pages/Dashboard.tsx","context/auth.ts","components/patterns/atoms/TextInput.tsx","components/patterns/molecules/forms/loginForm.tsx","pages/Login.tsx","pages/PageNotFound.tsx","components/privateRoute.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DefaultLayout","data-dropdown","className","type","src","alt","viewBox","d","DashboardPage","AuthContext","createContext","authToken","setAuthToken","token","useAuthContext","useContext","TextInput","register","name","addClass","placeholder","required","finalClass","ref","loginReducers","state","action","loading","data","length","serverErrors","property","constraints","err","message","toString","Error","LoginForm","history","useHistory","useForm","errors","handleSubmit","authDetails","useReducer","dispatch","map","item","key","Object","values","onSubmit","axios","post","then","res","accessToken","push","response","email","password","LoginPage","PageNotFound","PrivateRoute","props","Component","component","rest","localStorage","getItem","render","to","App","useState","useEffect","defaults","headers","common","setItem","window","location","reload","Provider","value","path","exact","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.fa63fc3d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction DefaultLayout() {\n  return (\n    <>\n      <div>\n        <span>Server 1</span>\n\n        <div>\n          <button\n            data-dropdown\n            className=\"flex items-center px-3 py-2 focus:outline-none hover:bg-gray-200 hover:rounded-md\"\n            type=\"button\"\n          >\n            <img\n              src=\"https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=100&h=100&q=80\"\n              alt=\"Profle\"\n              className=\"h-8 w-8 rounded-full\"\n            />\n\n            <svg\n              className=\"fill-current w-3 ml-4\"\n              viewBox=\"0 0 407.437 407.437\"\n            >\n              <path d=\"M386.258 91.567l-182.54 181.945L21.179 91.567 0 112.815 203.718 315.87l203.719-203.055z\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default DefaultLayout;\n","import React from 'react';\nimport DefaultLayout from '../layouts/default';\n\nfunction DashboardPage() {\n  return (\n    <>\n      <DefaultLayout />\n    </>\n  );\n}\n\nexport default DashboardPage;\n","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext({\n  authToken: '',\n  setAuthToken: (token: string) => {},\n});\n\nexport function useAuthContext() {\n  return useContext(AuthContext);\n}\n","import React from 'react';\n\ntype RefReturn =\n  | string\n  | ((instance: HTMLInputElement | null) => void)\n  | React.RefObject<HTMLInputElement>\n  | null\n  | undefined;\n\ntype InputProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  type?: string;\n  className?: string;\n  addClass?: string;\n  placeholder?: string;\n  name: string;\n  register: ({ required }: { required?: boolean }) => RefReturn;\n};\n\nconst TextInput: React.FC<InputProps> = ({\n  type = 'text',\n  register,\n  className,\n  name,\n  addClass,\n  placeholder,\n  required,\n}) => {\n  const finalClass = className\n    ? className\n    : 'w-full p-2 border border-gray-600 border-solid outline-none';\n  return (\n    <input\n      type={type}\n      ref={register({ required })}\n      name={name}\n      className={`${finalClass} ${addClass}`}\n      placeholder={placeholder}\n    />\n  );\n};\n\nexport default TextInput;\n","import { useAuthContext } from '@/context/auth';\nimport TextInput from '@patterns/atoms/TextInput';\nimport axios from 'axios';\nimport React, { useReducer } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\n\ninterface IFormValues {\n  email: string;\n  password: number;\n}\n\ninterface ClassValidatorError {\n  property: string;\n  constraints: object;\n}\n\ninterface LoginState {\n  loading: boolean;\n  serverErrors: [];\n}\n\nfunction loginReducers(state: LoginState, action: { type: string; data?: any }) {\n  switch (action.type) {\n    case 'loading':\n      return {\n        ...state,\n        loading: true\n      }\n    case 'loaded':\n      return {\n        ...state,\n        loading: false\n      }\n    case 'error':\n      if (typeof action.data === 'object' && action.data.length >= 1) {\n        return {\n          ...state,\n          serverErrors: action.data,\n        };\n      }\n\n      return {\n        ...state,\n        serverErrors: [\n          {\n            property: 'all',\n            constraints: {\n              err: action.data.message\n                ? action.data.message\n                : action.data.toString(),\n            },\n          },\n        ],\n      };\n    default:\n      throw new Error();\n  }\n}\n\nfunction LoginForm() {\n  const history = useHistory();\n  const { register, errors, handleSubmit } = useForm<IFormValues>();\n  const authDetails = useAuthContext();\n  const loginState: LoginState = {\n    loading: false,\n    serverErrors: [],\n  };\n  const [state, dispatch] = useReducer(loginReducers, loginState);\n\n  const onSubmit = (data: IFormValues) => {\n    dispatch({ type: 'loading' });\n\n    axios\n      .post('/api/auth/login', data)\n      .then((res) => {\n        if (res.data.accessToken) {\n          authDetails.setAuthToken(res.data.accessToken);\n          history.push('/admin');\n        } else {\n          dispatch({\n            type: 'error',\n            data: 'Server error! Please contact the Administrator.',\n          });\n        }\n      })\n      .catch((err) => {\n        dispatch({ type: 'error', data: err.response.data });\n      })\n      .finally(() => {\n        dispatch({ type: 'loaded' });\n      })\n  };\n\n  const Errors = (serverErrors: ClassValidatorError[]) => (\n    <ul>\n      {serverErrors.length >= 1 &&\n        serverErrors.map((item) => {\n          return (\n            <li className=\"list-disc text-sm\" key={item.property}>\n              {Object.values(item.constraints)}\n            </li>\n          );\n        })}\n    </ul>\n  );\n\n  return (\n    <>\n      <div className=\"px-8\">\n        {state.serverErrors.length >= 1 && (\n          <div className=\"bg-red-200 py-2 pl-8 pr-2\">\n            {Errors(state.serverErrors)}\n          </div>\n        )}\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"px-8 pt-3 pb-8\">\n        <div className=\"mb-4\">\n          <label>\n            <TextInput\n              placeholder=\"Email\"\n              name=\"email\"\n              register={register}\n              required\n            />\n            <span className=\"text-sm\">\n              {errors.email && 'Email is required'}\n            </span>\n          </label>\n        </div>\n        <div className=\"mb-4\">\n          <label>\n            <TextInput\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              register={register}\n              required\n            />\n            <span className=\"text-sm\">\n              {errors.password && 'Password is required'}\n            </span>\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          className={`focus:outline-none px-4 py-2 w-full cursor-pointer ${state.loading ? 'bg-gray-300 text-gray-500 cursor-wait' : 'bg-primary text-white '}`}\n        >\n          {state.loading ? 'Loading...' : 'Sign In'}\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default LoginForm;\n","import LoginForm from '@patterns/molecules/forms/loginForm';\nimport React from 'react';\n\nfunction LoginPage() {\n  return (\n    <>\n      <div className=\"bg-gray-300 w-full\">\n        <div className=\"flex-col flex justify-center h-screen md:w-1/3 lg:w-1/4 mx-auto\">\n          <div className=\"bg-white mb-16 pt-4\">\n            <h1 className=\"text-center text-3xl font-heading font-semibold\">\n              RxCP\n            </h1>\n            <LoginForm />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\n\nfunction PageNotFound() {\n  return (\n    <>\n      <h1>404 Page Not Found.</h1>\n    </>\n  );\n}\n\nexport default PageNotFound;\n","import { useAuthContext } from '@/context/auth';\nimport React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\ninterface PrivateRouteProps extends RouteProps {\n  component: any;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps) {\n  const { component: Component, ...rest } = props;\n  const authDetails = useAuthContext();\n  const token = localStorage.getItem('token');\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authDetails.authToken || token ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/admin/login\" />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import DashboardPage from '@pages/Dashboard';\nimport LoginPage from '@pages/Login';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PageNotFound from '@pages/PageNotFound';\nimport PrivateRoute from './components/privateRoute';\nimport { AuthContext } from './context/auth';\n\nfunction App() {\n  const [authToken, setAuthToken] = useState('');\n\n  const setToken = (token: string) => {\n    localStorage.setItem('token', token);\n    setAuthToken(token);\n  };\n\n  useEffect(() => {\n    // check token if still valid, log out if not\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      axios.post('/api/auth/check').catch((err) => {\n        // logout\n        setAuthToken('');\n        localStorage.setItem('token', '');\n        window.location.reload();\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <AuthContext.Provider value={{ authToken, setAuthToken: setToken }}>\n        <Router>\n          <Switch>\n            <Route path=\"/admin/login\" component={LoginPage} />\n\n            <PrivateRoute exact path=\"/\" component={DashboardPage} />\n            <PrivateRoute path=\"/admin\" component={DashboardPage} />\n            <PrivateRoute path=\"/dashboard\" component={DashboardPage} />\n\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}